<?php

// TMP Admin
class Admin_GForms_TMP extends GForms_TMP {
	
	/**
	 * Network Admin Class
	 *
	 * Generated by '__construct' method.
	 *
	 * @var string
	 */
	private $network_admin_gforms_tmp;
	function __construct() {
		if (is_network_admin()) {
			
			$this->network_admin_gforms_tmp = new Network_Admin_GForms_TMP();
		} else {
			
			// Auth Handler
			add_action( 'admin_action_settings_authorize_admin_gforms_tmp', array (
					$this,
					'settings_authorize_Admin_GForms_TMP' 
			) );
			
			// Single Edit Handler
			add_action( 'admin_action_settings_update_admin_gforms_tmp', array (
					$this,
					'settings_update_Admin_GForms_TMP' 
			) );
			
			// Load Assets
			add_action( 'admin_menu', array (
					&$this,
					'load_assets_Admin_GForms_TMP' 
			) );
			
			// Add Notices
			add_action( 'admin_notices', array (
					$this,
					'notices_Admin_GForms_TMP' 
			) );
			
			// Async
			add_filter( 'clean_url', array (
					$this,
					'add_async_forscript' 
			), 11, 1 );
		}
	}
	
	/**
	 * Loads Assets.
	 *
	 * @return void
	 */
	function load_assets_Admin_GForms_TMP() {
		if (is_admin()) {
			
			// this will run when in the WordPress admin
			if (! is_network_admin()) {
				
				// $this->page_hook = add_menu_page('Lead Settings', 'Leads',
				// 'manage_options', 'gforms-tmp', array(&$this,
				// 'display_settings_Admin_GForms_TMP'));
				$this->page_hook = add_submenu_page( 'edit.php?post_type=tmpleads', 'Lead Settings', 'Settings', 'manage_options', 'gforms-tmp', array (
						&$this,
						'display_settings_Admin_GForms_TMP' 
				) );
			}
			
			add_action( 'admin_print_scripts-' . $this->page_hook, array (
					&$this,
					'load_admin_scripts_GForms_TMP' 
			) );
		}
	}
	
	/**
	 * Handle Settings Update.
	 *
	 * @return void
	 */
	function settings_authorize_Admin_GForms_TMP() {
		check_admin_referer( 'gforms-tmp-auth-settings' );
		
		$is_multisite = is_multisite();
		
		$updated = false;
		
		$action = isset( $_POST ['action'] ) ? $_POST ['action'] : false;
		
		$action2 = isset( $_POST ['action2'] ) ? $_POST ['action2'] : false;
		
		$is_token_authorized = $this->is_api_authorized_GForms_TMP();
		
		$message = isset( $_POST ['gforms_tmp_google_oauth_message'] ) ? $_POST ['gforms_tmp_google_oauth_message'] : false;
		
		$error = isset( $_POST ['gforms_tmp_google_oauth_error'] ) ? $_POST ['gforms_tmp_google_oauth_error'] : false;
		
		if ($action && $action2) {
			
			if ($action == 'settings_authorize_admin_gforms_tmp') {
				
				if ($action2 == 'authorize' && $is_token_authorized) {
					
					$updated = true;
				}
				
				if ($action2 == 'deauthorize' && ! $is_token_authorized) {
					
					$updated = true;
				}
			}
		}
		
		wp_redirect( add_query_arg( array (
				'updated' => ($updated ? 'updated' : 'failed'),
				'operation' => $action2,
				'msg' => rawurlencode( $message ),
				'error' => rawurlencode( $error ) 
		), admin_url( 'admin.php?page=gforms-tmp' ) ) );
		
		exit();
	}
	
	/**
	 * Handle Settings Update.
	 *
	 * @return void
	 */
	function settings_update_Admin_GForms_TMP() {
		check_admin_referer( 'gforms-tmp-edit-settings' );
		
		$gforms_tmp_admin_client_id = isset( $_POST ['gforms_tmp_admin_client_id'] ) ? sanitize_text_field( $_POST ['gforms_tmp_admin_client_id'] ) : false;
		
		$gforms_tmp_active = isset( $_POST ['gforms_tmp_active'] ) ? 1 : 0;
		
		$gforms_tmp_admin_client_name = empty( $_POST ['gforms_tmp_admin_client_name'] ) ? false : wp_unslash( $_POST ['gforms_tmp_admin_client_name'] );
		
		$gforms_tmp_admin_forms = isset( $_POST ['gforms_tmp_admin_forms'] ) ? array_filter( $_POST ['gforms_tmp_admin_forms'] ) : false;
		
		update_option( 'gforms_tmp_admin_client_id', $gforms_tmp_admin_client_id );
		
		update_option( 'gforms_tmp_active', $gforms_tmp_active );
		
		update_option( 'gforms_tmp_last_update', time() );
		
		update_option( 'gforms_tmp_admin_client_name', $gforms_tmp_admin_client_name );
		
		update_option( 'gforms_tmp_admin_forms', $gforms_tmp_admin_forms );
		
		wp_redirect( add_query_arg( array (
				'updated' => 'updated' 
		), admin_url( 'admin.php?page=gforms-tmp' ) ) );
		
		exit();
	}
	
	/**
	 * Returns Update Messages
	 */
	function print_notices_Admin_GForms_TMP() {
		if (isset( $_GET ['updated'] )) {
			
			$message = isset( $_GET ['msg'] ) ? rawurldecode( $_GET ['msg'] ) : false;
			
			$error = isset( $_GET ['error'] ) ? rawurldecode( $_GET ['error'] ) : false;
			
			$messages = array ();
			
			if ('updated' == $_GET ['updated'])
				$messages [1] = __( 'Settings updated. ' . $message );
			else
				$messages [0] = __( 'Settings could not be updated. ' . $error );
		}
		
		if (! empty( $messages )) {
			
			foreach ( $messages as $status => $msg )
				echo '<div id="message" class="' . ($status ? 'updated' : 'error') . '"><p>' . $msg . '</p></div>';
		}
	}
	
	/**
	 * Registers the Blog Admin Page.
	 *
	 * @return void
	 */
	function display_auth_Admin_GForms_TMP() {
		$unauthorized = false;
		
		if (! current_user_can( 'manage_options' ))
			$unauthorized = __( 'You do not have sufficient permissions to edit these settings.' );
		
		if ($unauthorized) {
			
			echo "<p>{$unauthorized}</p>\n";
			
			return;
		}
		
		$is_multisite = is_multisite();
		
		$is_token_authorized = $this->is_api_authorized_GForms_TMP();
		
		$token = $this->get_api_token_GForms_TMP();
		
		?>
<hr />

<h2><?php echo __('Plugin Authorization', 'gforms-tmp'); ?></h2>

<form method="post" id="gforms_tmp_auth_settings_form"
	action="<?php echo admin_url('admin.php'); ?>">

	<table style="width: 100%;">

    <?php if (!$is_token_authorized) : ?>          
							
		<tr>

			<td>Login to activate the Plugin. This plugin requires a properly
				configured <i>Google Analytics account!</i>

			</td>

		</tr>

		<tr>

			<td><hr></td>

		</tr>

		<tr>

			<td><a class="button button-primary" id="google-login-block">Login to
					Google </a></td>

		</tr>

		<?php else : ?>

		<tr>

			<td>You have been authorized to use the API.</td>

		</tr>

		<tr>

			<td><hr></td>

		</tr>

		<tr>

			<td><a id="google-logout-block" class="button button-secondary">Clear
					Authorization</a></td>

		</tr>

		<?php endif; ?>
						
	</table>
			
            <?php wp_nonce_field('gforms-tmp-auth-settings'); ?>
			
			<input id="gforms_tmp_google_oauth" type="hidden"
		value="<?php echo wp_create_nonce("gforms_tmp_handle_wp_ajax"); ?>" />

	<input id="gforms_tmp_google_oauth_message"
		name="gforms_tmp_google_oauth_message" type="hidden" value="" /> <input
		id="gforms_tmp_google_oauth_error"
		name="gforms_tmp_google_oauth_error" type="hidden" value="" /> <input
		type="hidden" name="action"
		value="settings_authorize_admin_gforms_tmp" /> <input type="hidden"
		name="action2"
		value="<?php echo $is_token_authorized ? 'deauthorize' : 'authorize'; ?>" />

	<input id="gforms_tmp_google_user_logged_in" type="hidden"
		value="<?php echo $is_token_authorized ? 1 : 0; ?>" />

</form>

<?php
	}
	
	/**
	 * Registers the Blog Admin Page.
	 *
	 * @return void
	 */
	function display_settings_Admin_GForms_TMP() {
		$unauthorized = false;
		
		if (! current_user_can( 'manage_options' ))
			$unauthorized = __( 'You do not have sufficient permissions to edit these settings.' );
		
		if ($unauthorized) {
			
			echo "<p>{$unauthorized}</p>\n";
			
			return;
		}
		
		$this->print_notices_Admin_GForms_TMP();
		
		$is_multisite = is_multisite();
		
		$is_token_authorized = $this->is_api_authorized_GForms_TMP();
		
		$this->display_auth_Admin_GForms_TMP();
		
		if ($is_token_authorized) {
			
			$gforms_tmp_admin_client_name = get_option( 'gforms_tmp_admin_client_name', false );
			
			$gforms_tmp_admin_client_id = get_option( 'gforms_tmp_admin_client_id', false );
			
			$gforms_tmp_active = get_option( 'gforms_tmp_active', false );
			
			$gforms_tmp_last_update = get_option( 'gforms_tmp_last_update', false );
			
			$gforms_tmp_admin_forms = get_option( 'gforms_tmp_admin_forms', array () );
			
			$gforms = GFAPI::get_forms();
			
			$date = 'Y/m/d g:i:s a';
			
			?>
<hr />

<h2><?php echo __('Lead Client Settings', 'gforms-tmp'); ?></h2>

<br />

<form method="post" action="<?php echo admin_url('admin.php'); ?>">

            <?php wp_nonce_field('gforms-tmp-edit-settings'); ?>

            <input type="hidden" name="action"
		value="settings_update_admin_gforms_tmp" /> <input type="hidden"
		id="is_token_authorized"
		value="<?php echo $is_token_authorized ? 1 : 0; ?>" />

	<table class="form-table">

		<tr>

			<th scope="row"><?php _e('Lead Client Name') ?></th>

			<td><input type="text" name="gforms_tmp_admin_client_name"
				id="gforms_tmp_admin_client_name"
				value="<?php echo esc_attr($gforms_tmp_admin_client_name); ?>"
				class="regular-text" size="33" /></td>

		</tr>

		<tr>

			<th scope="row"><?php _e('Account ID') ?></th>

			<td><input type="text" name="gforms_tmp_admin_client_id"
				id="gforms_tmp_admin_client_id"
				value="<?php echo $gforms_tmp_admin_client_id; ?>" size="4"
				style="width: 50px;" /></td>

		</tr>

		<tr>
			<th scope="row"><?php _e('Enable Plugin'); ?></th>

			<td><label> <input type="checkbox" name="gforms_tmp_active"
					id="gforms_tmp_active" value="1"
					<?php checked((bool)$gforms_tmp_active && $gforms_tmp_admin_client_id, true); ?>
					<?php disabled((bool)($gforms_tmp_admin_client_id) && $is_token_authorized, false); ?>
					title="<?php echo(!$is_token_authorized ? "Plugin disabled until it has been authorized. " : "") . (!$gforms_tmp_admin_client_id ? "Enter Client ID." : ""); ?>" />
			</label><br /></td>

		</tr>

		<tr>

			<th scope="row"><?php _e('Select Active GravityForm(s)') ?></th>

			<td><select id="gforms_tmp_admin_forms"
				name="gforms_tmp_admin_forms[]" multiple="multiple"
				style="min-width: 200px;">
					<option value=""><?php esc_html_e('Use all forms', 'gforms-tmp'); ?></option>
                            <?php
			foreach ( $gforms as $gform ) {
				$selected = in_array( $gform ["id"], $gforms_tmp_admin_forms ) ? ' selected="selected" ' : '';
				?>
                                <option
						value="<?php echo absint($gform["id"]) ?>"
						<?php echo $selected; ?>><?php echo esc_html($gform["title"]) ?></option>
                                <?php
			}
			?>
                        </select></td>

		</tr>

		<tr>

			<th scope="row"><?php _e('Last Updated'); ?></th>

			<td><label><?php echo(!$gforms_tmp_last_update) ? __('Never') : mysql2date($date, date('Y-m-d h:i:s', $gforms_tmp_last_update)); ?></label>

				<input name="gforms_tmp_last_update" type="hidden"
				id="gforms_tmp_last_update"
				value="<?php echo $gforms_tmp_last_update ?>" /></td>

		</tr>

	</table>

            <?php submit_button(); ?>

        </form>



<script type="text/javascript">
			jQuery(document).ready(function($) {

				$('#gforms_tmp_admin_client_id').on('blur', function(e) {

					var hints = $.map($('#gforms_tmp_active').prop("title").split("."), $.trim);

					var idx = hints.indexOf("Enter Account ID");

					if (!$(this).val()) {

						$('#gforms_tmp_active').addClass('disabled').attr("disabled", "disabled").removeAttr("checked");

						if (idx < 0) {
							hints.push("Enter Account ID");
						}

					} else if ("1" == $("#is_token_authorized").val()) {

						$('#gforms_tmp_active').removeClass('disabled').removeAttr("disabled");

						if (idx >= 0) {
							hints.splice(idx, 1);
						}

					}

					$('#gforms_tmp_active').prop("title", hints.join(". "));

				});

			});

        </script>

<?php
		}
	}
	
	/**
	 * Load Admin Page Scripts
	 *
	 * @param mixed $hook        	
	 */
	function load_admin_scripts_GForms_TMP($hook = false) {
		// Get Saved Token
		$is_multisite = is_multisite();
		$oauth_provider = self::$oauth_gforms_tmp;
		$access_token = $oauth_provider->token();
		// Register the script
		wp_register_script( 'google-oauth2-js', plugins_url( '/assets/js/googleapi.js', self::$plugin_file ), array (
				'jquery' 
		) );
		
		// Localize the script with new data
		$object_array = array (
				'gapi_client_id' => self::$oauth_client_id,
				'gapi_redirect_uri' => self::$oauth_host . '/gapi/auth',
				'gapi_access_token' => $access_token ? json_encode( $access_token ) : false 
		);
		wp_localize_script( 'google-oauth2-js', 'tmp_api', $object_array );
		
		// Enqueued script with localized data.
		wp_enqueue_script( 'google-oauth2-js' );
	}
	function add_async_forscript($url) {
		if (strpos( $url, '#asyncLoad' ) === false) {
			return $url;
		} else
			return str_replace( '#asyncLoad', '', $url ) . "' async=\"async\" defer='defer";
	}
	
	/**
	 * Add Admin Notices
	 *
	 * @return void
	 */
	function notices_Admin_GForms_TMP() {
		if ($this->is_plugin_activated( false )) {
			if (! class_exists( "GFForms" )) {
				$class = "error";
				$message = "GravityForms Lead Addon requires Gravity Forms to function.  Please install and activate Gravity Forms.";
				echo "<div class=\"$class\"> <p>$message</p></div>";
			}
		}
		
		if (! $this->is_plugin_activated( true )) {
			$class = "error";
			$message = "The Target Media Partners Leads Plugin is not authorized or is inactive.  Please <a href=\"" . admin_url( 'admin.php?page=gforms-tmp' ) . "\">activate</a> so that Leads can be submitted.";
			echo "<div class=\"$class\"> <p>$message</p></div>";
		}
	}
}
	